# Generated by Django 5.0.12 on 2025-05-20 08:24

import autoslug.fields
import django.db.models.deletion
import scaleos.shared.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catering', '0002_caterer_organization'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, help_text="Optional code, e.g. 'A01'", max_length=10)),
                ('course', models.CharField(blank=True, choices=[('LOW', 'low'), ('MODERATE', 'moderate'), ('HIGH', 'high')], default='MODERATE', help_text='who do we need to inform', max_length=50, verbose_name='inform')),
                ('description', models.TextField(blank=True)),
                ('is_regulated_eu', models.BooleanField(default=False)),
                ('is_regulated_us', models.BooleanField(default=False)),
                ('icon_name', models.CharField(blank=True, help_text="Lucide icon name, e.g. 'egg', 'milk', 'fish'", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transition', models.CharField(choices=[('fade', 'Fade'), ('slide', 'Slide'), ('zoom', 'Zoom'), ('flip', 'Flip')], default='fade', max_length=50, verbose_name='every interval')),
                ('transition_interval', models.IntegerField(default=5000, help_text='in milliseconds', verbose_name='transition interval')),
                ('transition_duration', models.IntegerField(default=1500, help_text='in milliseconds', verbose_name='transition duration')),
                ('card_image', models.ImageField(blank=True, null=True, upload_to=scaleos.shared.models.CardModel.model_directory_path, verbose_name='card image')),
                ('card_description', models.TextField(blank=True, default='', verbose_name='card description')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, null=True, populate_from='name', unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'menu',
                'verbose_name_plural': 'menus',
            },
        ),
        migrations.AlterModelOptions(
            name='caterer',
            options={'verbose_name': 'caterer', 'verbose_name_plural': 'caterers'},
        ),
        migrations.CreateModel(
            name='BreakfastMenu',
            fields=[
                ('menu_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catering.menu')),
                ('includes_coffee', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'breakfast menu',
                'verbose_name_plural': 'breakfast menus',
            },
            bases=('catering.menu',),
        ),
        migrations.CreateModel(
            name='BrunchMenu',
            fields=[
                ('menu_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catering.menu')),
                ('special_note', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'brunch menu',
                'verbose_name_plural': 'brunch menus',
            },
            bases=('catering.menu',),
        ),
        migrations.CreateModel(
            name='DinnerMenu',
            fields=[
                ('menu_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catering.menu')),
                ('wine_pairing_available', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'dinner menu',
                'verbose_name_plural': 'dinner menus',
            },
            bases=('catering.menu',),
        ),
        migrations.AddField(
            model_name='menu',
            name='caterer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='catering.caterer'),
        ),
        migrations.AddField(
            model_name='menu',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menu',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menu',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(db_index=True, default=0, verbose_name='ordering')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, null=True, populate_from='name', unique=True)),
                ('course', models.CharField(blank=True, choices=[('STARTER', 'starter'), ('MAIN', 'main'), ('DESSERT', 'dessert'), ('DRINK', 'drink'), ('SOUP', 'soup'), ('APPETIZER', 'appetizer')], default='', help_text='who do we need to inform', max_length=50, verbose_name='inform')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='catering.menu')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
                'ordering': ['ordering'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('allergens', models.ManyToManyField(blank=True, related_name='ingredients', to='catering.allergen')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('instructions', models.TextField(blank=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='catering.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(max_length=50)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catering.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='catering.recipe')),
            ],
        ),
    ]
