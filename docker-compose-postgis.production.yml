volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

  production_redis_data: {}

  scaleos_production_postgis_data:
  scaleos_production_postgis_data_backups:


services:

  postgis:
    image: postgis/postgis:latest
    container_name: scaleos_production_postgis
    restart: always
    env_file:
      - ./.envs/.production/.postgres
    volumes:
      - scaleos_production_postgis_data:/var/lib/postgresql/data
      - scaleos_production_postgis_data_backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3



  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: scaleos_production_django
    volumes:
      - production_django_media:/app/scaleos/media
    depends_on:
      postgis:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start




  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: scaleos_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6
    container_name: scaleos_production_redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - production_redis_data:/data


  celeryworker:
    <<: *django
    image: scaleos_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: scaleos_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: scaleos_production_flower
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: scaleos_production_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
